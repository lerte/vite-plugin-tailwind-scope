{"version":3,"sources":["../node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs","../src/plugin/css.ts","../src/plugin/scope.ts"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import clsx from \"clsx\";\r\n\r\ntype CSSModuleClasses = {\r\n  readonly [key: string]: string;\r\n};\r\n\r\nexport const css = (styles: CSSModuleClasses) => {\r\n  return (strings: ReadonlyArray<string>) => {\r\n    const names = clsx([...strings]);\r\n    const classNames = names.split(\" \");\r\n    return classNames.map((item) => styles[item]).join(\" \");\r\n  };\r\n};\r\n","import type { Plugin } from \"vite\";\r\nimport fs from \"fs\";\r\nimport path from \"path\";\r\nimport postcss from \"postcss\";\r\nimport tailwindcss from \"tailwindcss\";\r\n\r\nconst VITE_PLUGIN_NAME = \"vite-plugin-tailwind-scope\";\r\n\r\ntype TailwindScopeOptions = {\r\n  /**\r\n   * where to generated css module file, relative to jsx/tsx file.\r\n   * default is relative to jsx/tsx file.\r\n   */\r\n  dest?: string;\r\n};\r\n\r\nconst generateCssModule = (\r\n  file: string,\r\n  css: string,\r\n  options?: TailwindScopeOptions\r\n) => {\r\n  const { dest = \".\" } = options ?? {};\r\n  const componentName = path.basename(file, path.extname(file));\r\n\r\n  const cssModuleContent = `\r\n  /* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */\r\n\r\n${css}   \r\n  `;\r\n\r\n  const base = path.dirname(file);\r\n  const dir = path.join(base, dest);\r\n\r\n  if (!fs.existsSync(dir)) {\r\n    fs.mkdirSync(dir, { recursive: true });\r\n  }\r\n\r\n  const filePath = path.join(dir, `${componentName}.module.css`);\r\n  fs.writeFileSync(filePath, cssModuleContent.trim());\r\n  console.log(`CSS Module ${componentName}.module.css created successfully!`);\r\n  return {\r\n    filePath,\r\n    content: cssModuleContent.trim(),\r\n  } as const;\r\n};\r\n\r\nexport const scope = (options?: TailwindScopeOptions): Plugin => {\r\n  // const virtualModuleIds = new Map(); // `${VITE_PLUGIN_NAME}:my-module`;\r\n  const resolvedVirtualModuleIds = new Map(); // \"\\0\" + virtualModuleId;\r\n\r\n  return {\r\n    name: VITE_PLUGIN_NAME,\r\n    // resolveId(id) {\r\n    //   if (virtualModuleIds.has(id)) {\r\n    //     return virtualModuleIds.get(id);\r\n    //   }\r\n    // },\r\n    load(id) {\r\n      if (resolvedVirtualModuleIds.get(id)) {\r\n        return resolvedVirtualModuleIds.get(id);\r\n      }\r\n    },\r\n    handleHotUpdate({ file }: { file: string }) {\r\n      if (file.endsWith(\".jsx\") || file.endsWith(\".tsx\")) {\r\n        const content = fs.readFileSync(file, \"utf-8\");\r\n        postcss([\r\n          tailwindcss({\r\n            content: [\r\n              {\r\n                raw: content,\r\n                extension: \"jsx\",\r\n              },\r\n            ],\r\n          }),\r\n        ])\r\n          .process(\"@tailwind utilities;\", { to: undefined })\r\n          .then(({ css }) => {\r\n            const { filePath, content } = generateCssModule(file, css, options);\r\n            resolvedVirtualModuleIds.set(filePath, content);\r\n          });\r\n      }\r\n    },\r\n  };\r\n};\r\n"],"mappings":";AAAA,SAAS,EAAE,GAAE;AAAC,MAAI,GAAE,GAAE,IAAE;AAAG,MAAG,YAAU,OAAO,KAAG,YAAU,OAAO,EAAE,MAAG;AAAA,WAAU,YAAU,OAAO,EAAE,KAAG,MAAM,QAAQ,CAAC,GAAE;AAAC,QAAI,IAAE,EAAE;AAAO,SAAI,IAAE,GAAE,IAAE,GAAE,IAAI,GAAE,CAAC,MAAI,IAAE,EAAE,EAAE,CAAC,CAAC,OAAK,MAAI,KAAG,MAAK,KAAG;AAAA,EAAE,MAAM,MAAI,KAAK,EAAE,GAAE,CAAC,MAAI,MAAI,KAAG,MAAK,KAAG;AAAG,SAAO;AAAC;AAAQ,SAAS,OAAM;AAAC,WAAQ,GAAE,GAAE,IAAE,GAAE,IAAE,IAAG,IAAE,UAAU,QAAO,IAAE,GAAE,IAAI,EAAC,IAAE,UAAU,CAAC,OAAK,IAAE,EAAE,CAAC,OAAK,MAAI,KAAG,MAAK,KAAG;AAAG,SAAO;AAAC;AAAC,IAAO,eAAQ;;;ACMxX,IAAM,MAAM,CAAC,WAA6B;AAC/C,SAAO,CAAC,YAAmC;AACzC,UAAM,QAAQ,aAAK,CAAC,GAAG,OAAO,CAAC;AAC/B,UAAM,aAAa,MAAM,MAAM,GAAG;AAClC,WAAO,WAAW,IAAI,CAAC,SAAS,OAAO,IAAI,CAAC,EAAE,KAAK,GAAG;AAAA,EACxD;AACF;;;ACXA,OAAO,QAAQ;AACf,OAAO,UAAU;AACjB,OAAO,aAAa;AACpB,OAAO,iBAAiB;AAExB,IAAM,mBAAmB;AAUzB,IAAM,oBAAoB,CACxB,MACAA,MACA,YACG;AACH,QAAM,EAAE,OAAO,IAAI,IAAI,WAAW,CAAC;AACnC,QAAM,gBAAgB,KAAK,SAAS,MAAM,KAAK,QAAQ,IAAI,CAAC;AAE5D,QAAM,mBAAmB;AAAA;AAAA;AAAA,EAGzBA,IAAG;AAAA;AAGH,QAAM,OAAO,KAAK,QAAQ,IAAI;AAC9B,QAAM,MAAM,KAAK,KAAK,MAAM,IAAI;AAEhC,MAAI,CAAC,GAAG,WAAW,GAAG,GAAG;AACvB,OAAG,UAAU,KAAK,EAAE,WAAW,KAAK,CAAC;AAAA,EACvC;AAEA,QAAM,WAAW,KAAK,KAAK,KAAK,GAAG,aAAa,aAAa;AAC7D,KAAG,cAAc,UAAU,iBAAiB,KAAK,CAAC;AAClD,UAAQ,IAAI,cAAc,aAAa,mCAAmC;AAC1E,SAAO;AAAA,IACL;AAAA,IACA,SAAS,iBAAiB,KAAK;AAAA,EACjC;AACF;AAEO,IAAM,QAAQ,CAAC,YAA2C;AAE/D,QAAM,2BAA2B,oBAAI,IAAI;AAEzC,SAAO;AAAA,IACL,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMN,KAAK,IAAI;AACP,UAAI,yBAAyB,IAAI,EAAE,GAAG;AACpC,eAAO,yBAAyB,IAAI,EAAE;AAAA,MACxC;AAAA,IACF;AAAA,IACA,gBAAgB,EAAE,KAAK,GAAqB;AAC1C,UAAI,KAAK,SAAS,MAAM,KAAK,KAAK,SAAS,MAAM,GAAG;AAClD,cAAM,UAAU,GAAG,aAAa,MAAM,OAAO;AAC7C,gBAAQ;AAAA,UACN,YAAY;AAAA,YACV,SAAS;AAAA,cACP;AAAA,gBACE,KAAK;AAAA,gBACL,WAAW;AAAA,cACb;AAAA,YACF;AAAA,UACF,CAAC;AAAA,QACH,CAAC,EACE,QAAQ,wBAAwB,EAAE,IAAI,OAAU,CAAC,EACjD,KAAK,CAAC,EAAE,KAAAA,KAAI,MAAM;AACjB,gBAAM,EAAE,UAAU,SAAAC,SAAQ,IAAI,kBAAkB,MAAMD,MAAK,OAAO;AAClE,mCAAyB,IAAI,UAAUC,QAAO;AAAA,QAChD,CAAC;AAAA,MACL;AAAA,IACF;AAAA,EACF;AACF;","names":["css","content"]}